# plot
#
# load data
PCA_all_pc <- read.table("../../PhD_stago/Complete/output1.txt", header = T, stringsAsFactors = FALSE)
global_file <- read.table("../../global.pnodorum.txt", header = TRUE, sep= "|", stringsAsFactors = FALSE)
global_file <- read.table("../../global.pnodorum.txt", header = TRUE, sep= "|", stringsAsFactors = FALSE)
global_file <- read.table("../../PhD_stago/global.pnodorum.txt", header = TRUE, sep= "|", stringsAsFactors = FALSE)
# load libs
library(dplyr)
library(ggplot2)
# load data
PCA_all_pc <- read.table("../../PhD_stago/Complete/output1.txt", header = T, stringsAsFactors = FALSE)
global_file <- read.table("../../PhD_stago/global.pnodorum.txt", header = TRUE, sep= "|", stringsAsFactors = FALSE)
# correct names between output from ngs_te_manager and global pop file
PCA_all_pc$Taxa <- gsub("-","_", PCA_all_pc$Taxa)
# ad a column from global file that contains the country id per isolate
global_file_populations <- select(global_file, isolate, population_country) # it will reduce the df with original names
i1 <- match(PCA_all_pc$Taxa, global_file_populations$isolate) # will match "pnod*" names from mydata and global_file
PCA_all_pc$population_country <- global_file_populations$population_country[i1] # will replace match "pnod*" acconrdingly with the other column (isolate)
# ad a column from global file that contains the country id per isolate
global_file_populations <- select(global_file, isolate, location3) # it will reduce the df with original names
i1 <- match(PCA_all_pc$Taxa, global_file_populations$isolate) # will match "pnod*" names from mydata and global_file
PCA_all_pc$location3 <- global_file_populations$location3[i1] # will replace match "pnod*" acconrdingly with the other column (isolate)
# ad a column from global file that contains the country id per isolate
global_file_populations <- select(global_file, isolate, species) # it will reduce the df with original names
i1 <- match(PCA_all_pc$Taxa, global_file_populations$isolate) # will match "pnod*" names from mydata and global_file
PCA_all_pc$species <- global_file_populations$species[i1] # will replace match "pnod*" acconrdingly with the other column (isolate)
# correct name of south africa
unique(PCA_all_pc$population_country)
# correct name of South Africa
unique(PCA_all_pc$population_country)
PCA_all_pc$population_country <- gsub("SouthAfrica","South Africa", PCA_all_pc$population_country)
# plot
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_country)) + geom_point() + theme_minimal()
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_simple)) + geom_point() + theme_minimal()
# set colors
cbPalette_all <- c("North Dakota" = "#e6194B", "Arkansas" = "#3cb44b","South Dakota" = "#ffe119", "Georgia" = "#4363d8", "Tennessee" = "#f58231",
"Virginia" = "#911eb4","Ohio" = "#42d4f4", "Oregon" = "#000000", "Minnesota" = "#f032e6", "Maryland" = "#bfef45", "Oklahoma" = "#fabebe",
"South Carolina" = "#469990", "North Carolina" = "#e6beff", "Texas" = "#9A6324", "New York" = "#fffac8","China" = "#800000",
"Switzerland" = "#aaffc3","Australia" = "grey", "Iran" = "#ffd8b1", "South Africa" = "#000175", "Non Pnodorum" = "#a9a9a9")
pop_cuntry_Pallete <- c("Australia" = "black", "China" = "Red", "Switzerland" = "blue", "Iran" = "yellow", "USA" = "grey", "South Africa" = "pink", "Finland" = "orange", "Sweden" = "purple", "Canada" = "#800000", "Brazil" = "#469990")
# plot
#ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_simple)) + geom_point(size = 3) + theme(text = element_text(size=12)) + labs(fill = "Population") + scale_color_manual(values=cbPalette_all)
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_country)) + geom_point(size = 2)  + theme_minimal(base_size = 14) +
labs(fill = "Population") + scale_color_manual(values=pop_cuntry_Pallete) + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150))
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = location3, label = Taxa)) + geom_point(size = 2) + theme(text = element_text(size=12)) +
labs(fill = "Population")  + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150)) +
ggsave(file = paste0("PCA_366_samplinglocation_names.pdf"), width = 8, height = 5, dpi = 300, units = "in", device='pdf', useDingbats=F)
# richards cod
unique(PCA_all_pc$location3)
richards_pop <- c("North Dakota" = "red","Minnesota" = "red", "South Dakota" = "red", "Arkansas" = "blue", "Georgia" = "blue","Maryland" = "blue",
"New York" = "blue", "North Carolina" = "blue", "Ohio" = "blue", "Oregon" = "blue","South Carolina" = "blue",
"Tennessee" = "blue", "Texas" = "blue", "Virginia" = "blue", "Oklahoma" = "black","China" = "grey",
"Switzerland" = "grey","Australia" = "grey", "Iran" = "grey", "South Africa" = "grey", "Finland"="grey",
"Canada" = "grey", "Sweden" = "grey", "Brazil" = "grey")
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = location3, label = Taxa)) + geom_point(size = 2) + theme_minimal(base_size = 14) +
labs(fill = "Population")  + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150)) +
scale_color_manual(values=richards_pop)
# explore
unique(PCA_all_pc$location3)
richards_pop <- c("North Dakota" = "red","Minnesota" = "red", "South Dakota" = "red", "Arkansas" = "blue", "Georgia" = "blue","Maryland" = "blue",
"New York" = "blue", "North Carolina" = "blue", "Ohio" = "blue", "Oregon" = "blue","South Carolina" = "blue",
"Tennessee" = "blue", "Texas" = "blue", "Virginia" = "blue", "Oklahoma" = "black","China" = "grey",
"Switzerland" = "grey","Australia" = "grey", "Iran" = "grey", "South Africa" = "grey", "Finland"="grey",
"Canada" = "grey", "Sweden" = "grey", "Brazil" = "grey")
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = location3, label = Taxa)) + geom_point(size = 2) + theme(text = element_text(size=12)) +
labs(fill = "Population")  + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150)) +
scale_color_manual(values=richards_pop) + geom_text(aes(label=Taxa), size=2, color = "black",hjust=0, vjust=-0.1)
# explore. Color coded according to the trees
unique(PCA_all_pc$location3)
tree_colors <- c("North Dakota" = "#F7EB2E","Minnesota" = "#F7EB2E", "South Dakota" = "#F7EB2E", "Arkansas" = "#29A7DF", "Georgia" = "#29A7DF","Maryland" = "#29A7DF",
"New York" = "#29A7DF", "North Carolina" = "#29A7DF", "Ohio" = "#29A7DF", "Oregon" = "#29A7DF","South Carolina" = "#29A7DF",
"Tennessee" = "#29A7DF", "Texas" = "#29A7DF", "Virginia" = "#29A7DF", "Oklahoma" = "#A87D50","China" = "#29A7DF",
"Switzerland" = "#29A7DF","Australia" = "#E8138B", "Iran" = "#F7EB2E", "South Africa" = "#E8138B", "Finland"="#29A7DF",
"Canada" = "#F7EB2E", "Sweden" = "#29A7DF", "Brazil" = "#29A7DF")
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = location3, label = Taxa)) + geom_point(size = 2) + theme(text = element_text(size=12)) +
labs(fill = "Population")  + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150)) +
scale_color_manual(values=tree_colors)
# plot
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_simple)) + geom_point(size = 3) + theme(text = element_text(size=12)) + labs(fill = "Population") + scale_color_manual(values=cbPalette_all)
# plot
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_country)) + geom_point(size = 2)  + theme_minimal(base_size = 14) +
labs(fill = "Population") + scale_color_manual(values=pop_cuntry_Pallete) + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150))
# plot
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_country)) + geom_point() + theme_minimal()
# set colors
cbPalette_all <- c("North Dakota" = "#e6194B", "Arkansas" = "#3cb44b","South Dakota" = "#ffe119", "Georgia" = "#4363d8", "Tennessee" = "#f58231",
"Virginia" = "#911eb4","Ohio" = "#42d4f4", "Oregon" = "#000000", "Minnesota" = "#f032e6", "Maryland" = "#bfef45", "Oklahoma" = "#fabebe",
"South Carolina" = "#469990", "North Carolina" = "#e6beff", "Texas" = "#9A6324", "New York" = "#fffac8","China" = "#800000",
"Switzerland" = "#aaffc3","Australia" = "grey", "Iran" = "#ffd8b1", "South Africa" = "#000175", "Non Pnodorum" = "#a9a9a9")
pop_cuntry_Pallete <- c("Australia" = "black", "China" = "Red", "Switzerland" = "blue", "Iran" = "yellow", "USA" = "grey", "South Africa" = "pink", "Finland" = "orange", "Sweden" = "purple", "Canada" = "#800000", "Brazil" = "#469990")
# plot
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_country)) + geom_point(size = 2)  + theme_minimal(base_size = 14) +
labs(fill = "Population") + scale_color_manual(values=pop_cuntry_Pallete) + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150))
# load libs
library(dplyr)
library(ggplot2)
# load data
PCA_all_pc <- read.table("../../PhD_stago/Complete/output1.txt", header = T, stringsAsFactors = FALSE)
global_file <- read.table("../../PhD_stago/global.pnodorum.txt", header = TRUE, sep= "|", stringsAsFactors = FALSE)
# correct names between output from ngs_te_manager and global pop file
PCA_all_pc$Taxa <- gsub("-","_", PCA_all_pc$Taxa)
# ad a column from global file that contains the country id per isolate
global_file_populations <- select(global_file, isolate, population_country) # it will reduce the df with original names
i1 <- match(PCA_all_pc$Taxa, global_file_populations$isolate) # will match "pnod*" names from mydata and global_file
PCA_all_pc$population_country <- global_file_populations$population_country[i1] # will replace match "pnod*" acconrdingly with the other column (isolate)
# ad a column from global file that contains the country id per isolate
global_file_populations <- select(global_file, isolate, location3) # it will reduce the df with original names
i1 <- match(PCA_all_pc$Taxa, global_file_populations$isolate) # will match "pnod*" names from mydata and global_file
PCA_all_pc$location3 <- global_file_populations$location3[i1] # will replace match "pnod*" acconrdingly with the other column (isolate)
# ad a column from global file that contains the country id per isolate
global_file_populations <- select(global_file, isolate, species) # it will reduce the df with original names
i1 <- match(PCA_all_pc$Taxa, global_file_populations$isolate) # will match "pnod*" names from mydata and global_file
PCA_all_pc$species <- global_file_populations$species[i1] # will replace match "pnod*" acconrdingly with the other column (isolate)
# correct name of South Africa
unique(PCA_all_pc$population_country)
PCA_all_pc$population_country <- gsub("SouthAfrica","South Africa", PCA_all_pc$population_country)
# plot
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_country)) + geom_point() + theme_minimal()
# set colors - This scheme will highligh populations other than USA (which will be in grey)
pop_cuntry_Pallete <- c("Australia" = "black", "China" = "Red", "Switzerland" = "blue", "Iran" = "yellow", "USA" = "grey", "South Africa" = "pink", "Finland" = "orange", "Sweden" = "purple", "Canada" = "#800000", "Brazil" = "#469990")
# plot
ggplot(PCA_all_pc, aes(x=PC1, y=PC2, colour = population_country)) + geom_point(size = 2)  + theme_minimal(base_size = 14) +
labs(fill = "Population") + scale_color_manual(values=pop_cuntry_Pallete) + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + scale_y_continuous(breaks=c(-50,0,50,100,150))
ggsave(file = paste0("PCA_366_country.png"), width = 8, height = 5, dpi = 300, units = "in", device='png')
# once nuc div was obtained for all pops. plot
nuc_diversity <- read.table("mean.nucleo.diversity.length.txt", stringsAsFactors = FALSE, header = F)
nuc_diversity<-nuc_diversity[!(nuc_diversity$V1=="NorthDakota2016"),]
# plot
library(ggplot2)
ggplot(nuc_diversity, aes(x=V1, y=V2)) + geom_point(size = 7) +
theme(axis.text.x = element_text(angle = 45, size = 5), panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_x_discrete(limits=c("Population1","Australia","SouthAfrica","Population2","Ohio","NorthCarolina",
"Oregon","NewYork","Texas","Arkansas","SwitzerlandA","SwitzerlandB","Population3",
"NorthDakota","SouthDakota","Minnesota","Iran","Oklahoma")) +
labs(y = "Nucleotide diversity") + geom_hline(yintercept=c(2e-09,2.5e-09,3e-09,3.5e-09,4e-09,4.5e-09,5e-09)) +
scale_y_continuous(breaks = c(2e-09,2.5e-09,3e-09,3.5e-09,4e-09,4.5e-09,5e-09))
ggplot(nuc_diversity, aes(x=V1, y=V2)) + geom_point(size = 7) +
theme(axis.text.x = element_text(angle = 45, size = 5), panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_x_discrete(limits=c("Population1","Australia","SouthAfrica","Population2","Ohio","NorthCarolina",
"Oregon","NewYork","Texas","Arkansas","SwitzerlandA","SwitzerlandB","Population3",
"NorthDakota","SouthDakota","Minnesota","Iran","Oklahoma")) +
labs(y = "Nucleotide diversity", x = "Populations") + geom_hline(yintercept=c(2e-09,2.5e-09,3e-09,3.5e-09,4e-09,4.5e-09,5e-09)) +
scale_y_continuous(breaks = c(2e-09,2.5e-09,3e-09,3.5e-09,4e-09,4.5e-09,5e-09))
ggsave(file = paste0("nuc_diversity_2.pdf"), width = 200, height = 100, units = "mm", device='pdf', useDingbats=F)
ggplot(nuc_diversity, aes(x=V1, y=V2)) + geom_point(size = 3) + theme(axis.text.x = element_text(angle = 45)) +
scale_x_discrete(limits=c("NorthDakota.all.2016","SouthDakota2016","Minnesota.2002.2003.2004.2008",
"Iran2005.2010","Oklahoma2016","Ohio2003","NorthCarolina2008",
"Oregon1993.2011","NewYork1991","Texas1992","Arkansas1995","Switzerland1999","China2001",
"Australia2001","SouthAfrica1995"))
